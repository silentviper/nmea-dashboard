{"version":3,"file":"useSignalk-DpnTJwyw.js","sources":["../../src/composables/useSignalk.ts"],"sourcesContent":["interface SignalKValue {\n\tpath: string;\n\tvalue: any;\n\ttimestamp?: string;\n}\n\ninterface SignalKUpdate {\n\ttimestamp: string;\n\tvalues: SignalKValue[];\n}\n\ninterface SignalKMessage {\n\tcontext: string;\n\tupdates: SignalKUpdate[];\n}\n\ninterface SignalKSubscription {\n\tpath: string;\n\tperiod?: number;\n\tformat?: string;\n\tpolicy?: string;\n\tminPeriod?: number;\n}\n\ninterface WebSocketState {\n\tisConnected: boolean;\n\terror: Error | null;\n\treconnectCount: number;\n}\n\nexport class SignalKWebSocket {\n\tprivate ws: WebSocket | null = null;\n\tprivate reconnectAttempts = 0;\n\tprivate maxReconnectAttempts = 5;\n\tprivate reconnectTimeout: number = 1000;\n\tprivate subscriptions = new Set<SignalKSubscription>();\n\tprivate messageHandlers = new Set<(message: SignalKMessage) => void>();\n\n\tconstructor(private baseUrl: string) {}\n\n\tconnect() {\n\t\ttry {\n\t\t\tthis.ws = new WebSocket(\n\t\t\t\t`ws://${this.baseUrl}/signalk/v1/stream?subscribe=none`\n\t\t\t);\n\n\t\t\tthis.ws.onopen = () => {\n\t\t\t\tconsole.log('WebSocket connected');\n\t\t\t\tthis.reconnectAttempts = 0;\n\t\t\t\tthis.resubscribe();\n\t\t\t};\n\n\t\t\tthis.ws.onclose = () => {\n\t\t\t\tconsole.log('WebSocket closed');\n\t\t\t\tthis.handleDisconnect();\n\t\t\t};\n\n\t\t\tthis.ws.onerror = (error) => {\n\t\t\t\tconsole.error('WebSocket error:', error);\n\t\t\t\tthis.handleDisconnect();\n\t\t\t};\n\n\t\t\tthis.ws.onmessage = (event) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst message: SignalKMessage = JSON.parse(event.data);\n\t\t\t\t\tthis.messageHandlers.forEach((handler) => handler(message));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Error parsing WebSocket message:', error);\n\t\t\t\t}\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tconsole.error('Error creating WebSocket:', error);\n\t\t\tthis.handleDisconnect();\n\t\t}\n\t}\n\n\tprivate handleDisconnect() {\n\t\tif (this.reconnectAttempts < this.maxReconnectAttempts) {\n\t\t\tthis.reconnectAttempts++;\n\t\t\tconst timeout =\n\t\t\t\tthis.reconnectTimeout * Math.pow(2, this.reconnectAttempts - 1);\n\t\t\tconsole.log(\n\t\t\t\t`Attempting to reconnect in ${timeout}ms (attempt ${this.reconnectAttempts})`\n\t\t\t);\n\t\t\tsetTimeout(() => this.connect(), timeout);\n\t\t} else {\n\t\t\tconsole.error('Max reconnection attempts reached');\n\t\t}\n\t}\n\n\tsubscribe(subscription: SignalKSubscription) {\n\t\tthis.subscriptions.add(subscription);\n\t\tif (this.isConnected()) {\n\t\t\tthis.sendSubscription(subscription);\n\t\t}\n\t}\n\n\tprivate resubscribe() {\n\t\tif (this.subscriptions.size > 0) {\n\t\t\tconst request = {\n\t\t\t\tcontext: 'vessels.self',\n\t\t\t\tsubscribe: Array.from(this.subscriptions),\n\t\t\t};\n\t\t\tthis.ws?.send(JSON.stringify(request));\n\t\t}\n\t}\n\n\tprivate sendSubscription(subscription: SignalKSubscription) {\n\t\tconst request = {\n\t\t\tcontext: 'vessels.self',\n\t\t\tsubscribe: [subscription],\n\t\t};\n\t\tthis.ws?.send(JSON.stringify(request));\n\t}\n\n\taddMessageHandler(handler: (message: SignalKMessage) => void) {\n\t\tthis.messageHandlers.add(handler);\n\t}\n\n\tremoveMessageHandler(handler: (message: SignalKMessage) => void) {\n\t\tthis.messageHandlers.delete(handler);\n\t}\n\n\tisConnected(): boolean {\n\t\treturn this.ws?.readyState === WebSocket.OPEN;\n\t}\n\n\tdisconnect() {\n\t\tthis.ws?.close();\n\t\tthis.ws = null;\n\t\tthis.subscriptions.clear();\n\t\tthis.messageHandlers.clear();\n\t}\n}\n\nexport function useSignalK(baseUrl: string = window.location.host) {\n\tconst signalK = new SignalKWebSocket(baseUrl);\n\n\treturn {\n\t\tconnect: () => signalK.connect(),\n\t\tdisconnect: () => signalK.disconnect(),\n\t\tsubscribe: (subscription: SignalKSubscription) =>\n\t\t\tsignalK.subscribe(subscription),\n\t\taddMessageHandler: (handler: (message: SignalKMessage) => void) =>\n\t\t\tsignalK.addMessageHandler(handler),\n\t\tremoveMessageHandler: (handler: (message: SignalKMessage) => void) =>\n\t\t\tsignalK.removeMessageHandler(handler),\n\t\tisConnected: () => signalK.isConnected(),\n\t};\n}\n"],"names":["SignalKWebSocket","baseUrl","__publicField","error","event","message","handler","timeout","subscription","_a","request","useSignalK","signalK"],"mappings":"oKA8BO,MAAMA,CAAiB,CAQ7B,YAAoBC,EAAiB,CAP7BC,EAAA,UAAuB,MACvBA,EAAA,yBAAoB,GACpBA,EAAA,4BAAuB,GACvBA,EAAA,wBAA2B,KAC3BA,EAAA,yBAAoB,KACpBA,EAAA,2BAAsB,KAEV,KAAA,QAAAD,CAAA,CAEpB,SAAU,CACL,GAAA,CACH,KAAK,GAAK,IAAI,UACb,QAAQ,KAAK,OAAO,mCACrB,EAEK,KAAA,GAAG,OAAS,IAAM,CACtB,QAAQ,IAAI,qBAAqB,EACjC,KAAK,kBAAoB,EACzB,KAAK,YAAY,CAClB,EAEK,KAAA,GAAG,QAAU,IAAM,CACvB,QAAQ,IAAI,kBAAkB,EAC9B,KAAK,iBAAiB,CACvB,EAEK,KAAA,GAAG,QAAWE,GAAU,CACpB,QAAA,MAAM,mBAAoBA,CAAK,EACvC,KAAK,iBAAiB,CACvB,EAEK,KAAA,GAAG,UAAaC,GAAU,CAC1B,GAAA,CACH,MAAMC,EAA0B,KAAK,MAAMD,EAAM,IAAI,EACrD,KAAK,gBAAgB,QAASE,GAAYA,EAAQD,CAAO,CAAC,QAClDF,EAAO,CACP,QAAA,MAAM,mCAAoCA,CAAK,CAAA,CAEzD,QACQA,EAAO,CACP,QAAA,MAAM,4BAA6BA,CAAK,EAChD,KAAK,iBAAiB,CAAA,CACvB,CAGO,kBAAmB,CACtB,GAAA,KAAK,kBAAoB,KAAK,qBAAsB,CAClD,KAAA,oBACC,MAAAI,EACL,KAAK,iBAAmB,KAAK,IAAI,EAAG,KAAK,kBAAoB,CAAC,EACvD,QAAA,IACP,8BAA8BA,CAAO,eAAe,KAAK,iBAAiB,GAC3E,EACA,WAAW,IAAM,KAAK,QAAQ,EAAGA,CAAO,CAAA,MAExC,QAAQ,MAAM,mCAAmC,CAClD,CAGD,UAAUC,EAAmC,CACvC,KAAA,cAAc,IAAIA,CAAY,EAC/B,KAAK,eACR,KAAK,iBAAiBA,CAAY,CACnC,CAGO,aAAc,CAnEhB,IAAAC,EAoED,GAAA,KAAK,cAAc,KAAO,EAAG,CAChC,MAAMC,EAAU,CACf,QAAS,eACT,UAAW,MAAM,KAAK,KAAK,aAAa,CACzC,GACAD,EAAA,KAAK,KAAL,MAAAA,EAAS,KAAK,KAAK,UAAUC,CAAO,EAAC,CACtC,CAGO,iBAAiBF,EAAmC,CA7EtD,IAAAC,EA8EL,MAAMC,EAAU,CACf,QAAS,eACT,UAAW,CAACF,CAAY,CACzB,GACAC,EAAA,KAAK,KAAL,MAAAA,EAAS,KAAK,KAAK,UAAUC,CAAO,EAAC,CAGtC,kBAAkBJ,EAA4C,CACxD,KAAA,gBAAgB,IAAIA,CAAO,CAAA,CAGjC,qBAAqBA,EAA4C,CAC3D,KAAA,gBAAgB,OAAOA,CAAO,CAAA,CAGpC,aAAuB,CA7FjB,IAAAG,EA8FE,QAAAA,EAAA,KAAK,KAAL,YAAAA,EAAS,cAAe,UAAU,IAAA,CAG1C,YAAa,CAjGP,IAAAA,GAkGLA,EAAA,KAAK,KAAL,MAAAA,EAAS,QACT,KAAK,GAAK,KACV,KAAK,cAAc,MAAM,EACzB,KAAK,gBAAgB,MAAM,CAAA,CAE7B,CAEO,SAASE,EAAWV,EAAkB,OAAO,SAAS,KAAM,CAC5D,MAAAW,EAAU,IAAIZ,EAAiBC,CAAO,EAErC,MAAA,CACN,QAAS,IAAMW,EAAQ,QAAQ,EAC/B,WAAY,IAAMA,EAAQ,WAAW,EACrC,UAAYJ,GACXI,EAAQ,UAAUJ,CAAY,EAC/B,kBAAoBF,GACnBM,EAAQ,kBAAkBN,CAAO,EAClC,qBAAuBA,GACtBM,EAAQ,qBAAqBN,CAAO,EACrC,YAAa,IAAMM,EAAQ,YAAY,CACxC,CACD"}